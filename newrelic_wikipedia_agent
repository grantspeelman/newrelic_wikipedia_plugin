#!/usr/bin/env ruby
require "rubygems"
require "bundler/setup"
require "newrelic_plugin"
require "net/http"

#
#
# NOTE: Please add the following lines to your Gemfile:
#     gem "newrelic_plugin", git: "git@github.com:newrelic-platform/newrelic_plugin.git"
#
#
# Note: You must have a config/newrelic_plugin.yml file that
#       contains the following information in order to use
#       this Gem:
#
#       newrelic:
#         # Update with your New Relic account license key:
#         license_key: 'put_your_license_key_here'
#         # Set to '1' for verbose output, remove for normal output.
#         # All output goes to stdout/stderr.
#         verbose: 1
#       agents:
#         wikipedia:
#           -
#             hostname: "en.wikipedia.org"
#
#


#
#
# The entire agent should be enclosed in a "WikipediaAgent" module
#
#
module WikipediaAgent

  #
  # Agent, Metric and PollCycle classes
  #
  # Each agent module must have an Agent, Metric and PollCycle class that inherits from their
  # Component counterparts as you can see below.
  #
  class Agent < NewRelic::Plugin::Agent::Base

    agent_guid   "feed7770f40aa3cb72a3e4be872ec97c35aeac25"
    agent_version "0.0.3"

    #
    # Each agent class must also include agent_human_labels. agent_human_labels requires:
    # A friendly name of your component to appear in graphs.
    # A block that returns a friendly name for this instance of your component.
    #
    # The block runs in the context of the agent instance.
    #
    agent_human_labels("Wikipedia") { "Wikipedia" }


    #
    # agent_config is a list of variables that the component will need
    # from its instances. The Wikipedia agent is asking for the
    # hostname to get the information from which it uses when it asks for the data.
    #
    agent_config_options :hostname

    def setup_metrics
      @@WIKIPEDIA_STAT_URL = URI.parse("http://#{hostname}/w/api.php?action=query&format=json&meta=siteinfo&siprop=statistics")
      @total_articles=NewRelic::Processor::Rate.new
    end


    def poll_cycle
      num_articles = get_num_articles
      report_metric("Articles/Total", "Articles/Seconds", @total_articles.process(num_articles)) if num_articles
    end

    private

    def get_num_articles
      begin
        resp = ::Net::HTTP.get_response(@@WIKIPEDIA_STAT_URL)
      rescue
        return nil
      end
      data = resp.body

      begin
        result = JSON.parse(data)  # if server unavailable, then data may be html, not json
      rescue
        return nil
      end
      puts "returning #{result['query']['statistics']['articles']} total articles"
      result['query']['statistics']['articles']
    end
  end


  NewRelic::Plugin::Setup.install_agent :wikipedia,WikipediaAgent


  #
  # Launch the agent (never returns)
  #
  NewRelic::Plugin::Run.setup_and_run

end
